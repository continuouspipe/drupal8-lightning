# Set default/global variables.
variables:
  - name: CP_ENVIRONMENT
    expression: code_reference.branch

tasks:
  images:
    build:
      environment:
        - name: GITHUB_TOKEN
          value: ${GITHUB_TOKEN}
      services:
        web:
          image: quay.io/inviqa_images/drupal8-lightning

  db_deployment:
    deploy:
      cluster: ${CLUSTER}
      environment:
        name: '"drupal8-lightning-" ~ code_reference.branch'
      services:
        database:
          specification:
            volumes:
              - type: persistent
                name: database-volume
                capacity: 5Gi
                storage_class: default
            volume_mounts:
              - name: database-volume
                mount_path: /var/lib/mysql
            command:
              - /usr/local/bin/docker-entrypoint.sh
              - mysqld
              - --ignore-db-dir=lost+found
              - --max_allowed_packet=128M
            ports:
              - 3306
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                cpu: 500m
                memory: 2Gi
            environment_variables:
              - name: MYSQL_ROOT_PASSWORD
                value: ${DATABASE_ROOT_PASSWORD}
              - name: MYSQL_USER
                value: ${DRUPAL_DATABASE_USERNAME}
              - name: MYSQL_PASSWORD
                value: ${DRUPAL_DATABASE_PASSWORD}
          deployment_strategy:
              readiness_probe:
                type: tcp
                port: 3306

  web_deployment:
    deploy:
      cluster: ${CLUSTER}
      environment:
        name: '"drupal8-lightning-" ~ code_reference.branch'
      services:
        web:
          specification:
            environment_variables:
              - name: GITHUB_TOKEN
                value: ${GITHUB_TOKEN}
              - name: DRUPAL_DATABASE_NAME
                value: ${DRUPAL_DATABASE_NAME}
              - name: DRUPAL_DATABASE_USERNAME
                value: ${DRUPAL_DATABASE_USERNAME}
              - name: DRUPAL_DATABASE_PASSWORD
                value: ${DRUPAL_DATABASE_PASSWORD}
              - name: DRUPAL_DATABASE_PREFIX
                value: ${DRUPAL_DATABASE_PREFIX}
              - name: DRUPAL_DATABASE_HOST
                value: ${DRUPAL_DATABASE_HOST}
              - name: DRUPAL_DATABASE_PORT
                value: ${DRUPAL_DATABASE_PORT}
              - name: CP_ENVIRONMENT
                value: ${CP_ENVIRONMENT}
            ports:
              - 80
            resources:
              requests:
                cpu: 50m
                memory: 500Mi
              limits:
                cpu: 1
                memory: 2G
        varnish:
          endpoints:
            -
              name: http
          specification:
            ports:
              - 80
            resources:
              limits:
                cpu: 50m
                memory: 500Mi
          deployment_strategy:
            readiness_probe:
              type: tcp
              port: 80

  solr_deployment:
    deploy:
      cluster: ${CLUSTER}
      environment:
        name: '"drupal8-lightning-" ~ code_reference.branch'
      services:
        solr:
          specification:
            volumes:
              - type: persistent
                name: solr-volume
                capacity: 5Gi
                storage_class: default
            volume_mounts:
                - name: solr-volume
                  mount_path: /usr/local/share/solr/drupal/data/
            ports:
              - 8983
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                cpu: 500m
                memory: 500Mi
          deployment_strategy:
            readiness_probe:
              type: tcp
              port: 8983


pipelines:
  - name: Remote Dev
    condition: 'code_reference.branch matches "/^cpdev/"'
    tasks:
      - images
      - db_deployment
      - solr_deployment
      - web_deployment
    variables:
      - name: CP_ENVIRONMENT
        value: development

  - name: Review Branches
    condition: '"cp enabled" in pull_request.labels'
    tasks: &review_tasks
      - images
      - db_deployment
      - solr_deployment
      - web_deployment
    variables: &review_variables
      - name: CP_ENVIRONMENT
        value: staging

  - name: UAT
    condition: 'code_reference.branch in ["staging", "release"]'
    tasks: *review_tasks
    variables: *review_variables
